<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"

    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"


    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appbar"

        android:layout_height="192dp"
        android:layout_width="match_parent">

        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:toolbarId="@+id/toolbar"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"

            app:contentScrim="?attr/colorPrimary">


            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_height="?attr/actionBarSize"
                android:layout_width="match_parent"></androidx.appcompat.widget.Toolbars
        </com.google.android.material.appbar.CollapsingToolbarLayout>
    </com.google.android.material.appbar.AppBarLayout>

    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"


        app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:id="@+id/Page"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            tools:context=".ScrollingActivity"
            tools:showIn="@layout/activity_scrolling">

            <EditText
                android:id="@+id/Content"
                android:layout_width="347dp"
                android:layout_height="181dp"
                android:layout_marginStart="65dp"
                android:layout_marginTop="24dp"
                android:layout_marginEnd="65dp"
                android:ems="10"
                android:gravity="start|top"
                android:inputType="textMultiLine"
                android:text="We use the type of variable that the array can hold, followed by [], to show that we are creating a new array. For example, if we want to represent a piano, we could use String[] Piano = {“C”, “D”, “E”, “F”, “G”, “A”, “B”}."
                android:textAlignment="center"
                android:textSize="20sp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.353"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <EditText
                android:id="@+id/Content_Cont"
                android:layout_width="344dp"
                android:layout_height="216dp"
                android:layout_marginStart="65dp"
                android:layout_marginEnd="65dp"
                android:layout_marginBottom="20dp"
                android:ems="10"
                android:gravity="start|top"
                android:inputType="textMultiLine"
                android:singleLine="false"
                android:text="Each value of the given array can be accessed using the following syntax: Piano[0], where we use the variable name (Piano) and the index, or position, in the array that we want to access. In this case, Piano[0] accesses note C, and we can think of this as playing C on this piano."
                android:textAlignment="center"
                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
                android:textSize="20sp"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.375"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/Content"
                app:layout_constraintVertical_bias="0.061" />

            <EditText
                android:id="@+id/Content_Cont2"
                android:layout_width="358dp"
                android:layout_height="234dp"
                android:ems="10"
                android:gravity="start|top"
                android:inputType="textMultiLine"
                android:text="Each value can also be reassigned to change: we can set Piano[0] to &quot;D&quot;. This means that the Piano would now hold the values {&quot;D&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;A&quot;, and &quot;B&quot;, so accessing Piano[0] would play D instead of C. The piano forgets that its first value was C and only remembers the note D now!"
                android:textAlignment="center"
                android:textSize="20sp"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.788"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/Content_Cont"
                app:layout_constraintVertical_bias="0.0" />

            <ScrollView
                android:layout_width="20dp"
                android:layout_height="433dp"
                android:layout_marginStart="1dp"
                android:layout_marginTop="1dp"
                android:layout_marginEnd="1dp"
                android:layout_marginBottom="1dp"
                app:layout_constraintBottom_toTopOf="@+id/Content_Cont2"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toEndOf="@+id/Content"
                app:layout_constraintTop_toTopOf="parent">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical" />
            </ScrollView>

        </androidx.constraintlayout.widget.ConstraintLayout>

    </androidx.core.widget.NestedScrollView>


</androidx.coordinatorlayout.widget.CoordinatorLayout>