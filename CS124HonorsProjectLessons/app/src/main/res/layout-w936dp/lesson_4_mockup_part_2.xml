<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"

    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"


    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appbar"

        android:layout_height="192dp"
        android:layout_width="match_parent">

        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:toolbarId="@+id/toolbar"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"

            app:contentScrim="?attr/colorPrimary">


            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_height="?attr/actionBarSize"
                android:layout_width="match_parent"></androidx.appcompat.widget.Toolbars
        </com.google.android.material.appbar.CollapsingToolbarLayout>
    </com.google.android.material.appbar.AppBarLayout>

    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"


        app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:id="@+id/Page"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_behavior="@string/appbar_scrolling_view_behavior"
            tools:context=".ScrollingActivity"
            tools:showIn="@layout/activity_scrolling">

            <EditText
                android:id="@+id/Content"
                android:layout_width="349dp"
                android:layout_height="270dp"
                android:layout_marginStart="65dp"
                android:layout_marginTop="44dp"
                android:layout_marginEnd="65dp"
                android:ems="10"
                android:gravity="start|top"
                android:inputType="textMultiLine"
                android:text="Loops can run infinitely if we aren’t careful! We need to ensure that the condition is eventually false. Otherwise, the loop will be infinite, and we don’t want to be stuck in the loop forever. In music, for instance, we don’t want to be playing the same measures over and over again. That’s why it is important that we ensure the condition will be false at some point."
                android:textAlignment="center"
                android:textSize="20sp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.319"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <EditText
                android:id="@+id/Content_Cont"
                android:layout_width="371dp"
                android:layout_height="268dp"
                android:layout_marginStart="65dp"
                android:layout_marginEnd="65dp"
                android:layout_marginBottom="20dp"
                android:ems="10"
                android:gravity="start|top"
                android:inputType="textMultiLine"
                android:singleLine="false"
                android:text="Why do we use loops? Well, if we think back to our previous lesson on arrays, we can use loops to run through each element of an array! In our Piano array example, we could set up a loop so that the program plays each note of the piano in order. Overall, loops are generally useful for repeating a section of code without having to copy and paste it multiple times!"
                android:textAlignment="center"
                android:textAppearance="@style/TextAppearance.AppCompat.Body1"
                android:textSize="20sp"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.488"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/Content"
                app:layout_constraintVertical_bias="1.0" />

            <ScrollView
                android:layout_width="17dp"
                android:layout_height="312dp"
                android:layout_marginStart="2dp"
                android:layout_marginTop="1dp"
                android:layout_marginBottom="1dp"
                app:layout_constraintBottom_toTopOf="@+id/Content_Cont"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toEndOf="@+id/Content"
                app:layout_constraintTop_toTopOf="parent">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical" />
            </ScrollView>

        </androidx.constraintlayout.widget.ConstraintLayout>

    </androidx.core.widget.NestedScrollView>


</androidx.coordinatorlayout.widget.CoordinatorLayout>